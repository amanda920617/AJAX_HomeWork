@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
    @Html.Partial("Partial1")
    @*此Partial2未經過action，所以不會有任何內容(傳入的任何參數內容(ViewBag...)等等)*@
    @Html.Partial("Partial2")
</div>

<table id="empTable" class="table table-bordered table-hover table-striped">
    <thead>
        <tr>
            <th>姓名</th>
            <th>年資</th>
            <th>薪水</th>
        </tr>
    </thead>
    <tbody id="data">
        @*要在下面寫完後插入*@
    </tbody>
</table>

@*使用section需要在_Layout.cshtml加上@await RenderSectionAsync("section名稱", required: false)*@
@section Styles{
    <style>
        p {
            background-color: yellow
        }
    </style>
}

@section Scripts{
    <script>
        //改變顏色
        //$('.display-4').on('mouseover', function () {
        //    $(this).css('color', 'pink')
        //}).on('mouseout', function () {
        //    $(this).css('color', 'black')
        //})

        //物件屬性
        const emp = {
            "employees": [
                { "name": "Tom", "workYears": 3, "salary": 35000 },
                { "name": "Jack", "workYears": 5, "salary": 40000 },
                { "name": "Mary", "workYears": 7, "salary": 45000 }
            ]
        };

        //使用for輸出物件內容及屬性
        //for (let i = 0; i < emp.employees.length; i++) {
        //    console.log(emp.employees[i].name)
        //    console.log(emp.employees[i].workYears)
        //    console.log(emp.employees[i].salary)

        //    console.log(emp.employees[i])
        //}

        //使用JavaScript
        //const datas = emp.employees.map(employee => {
        //    //解構賦值 => 就不用輸入employee.name等等一長串
        //    const { name, workYears, salary } = employee
        //    return(
        //        `<tr>
        //                <td>${name}</td>
        //                <td>${workYears}</td>
        //                <td>${salary}</td>
        //        </tr>`
        //    )
        //})
        ////'#empTable>tbody' 使用 > 表示下一層
        ////使用datas.join("")空白將資料串一起
        //document.querySelector('#empTable>tbody').innerHTML = datas.join("")

        //使用JQuery
        $("#data").html(emp.employees.map(employee =>
                    `<tr>
                                <td>${employee.name}</td>
                                <td>${employee.workYears}</td>
                                <td>${employee.salary}</td>
                    </tr>`
                ).join(""));

        //const data = document.getElementById('data');
        //display = emp.employees.map(employee =>
        //    `<tr>
        //                <td>${employee.name}</td>
        //                <td>${employee.workYears}</td>
        //                <td>${employee.salary}</td>
        //    </tr>`
        //).join("")
        //data.innerHTML = display
    </script>


}

